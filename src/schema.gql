# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  _id: ID!
  nameCategory: String!
}

type CategoryResponse {
  code: String!
  info: Category!
  message: String!
  value: String!
}

input ChangePasswordDto {
  _id: ID!
  newPassword: String!
  oldPassword: String!
  repeatNewPassword: String!
}

input CreateCategoryDto {
  nameCategory: String!
}

input CreateFavoriteDto {
  idProduct: ID!
  idUser: ID!
}

input CreateLevelDto {
  nameLevel: String!
}

input CreateProductDto {
  idCategory: ID!
  nameProduct: String!
  price: Float!
  stock: Float!
}

input CreateSubscriptionDto {
  email: String!
}

input CreateUserDto {
  carnet: String!
  email: String!
  idLevel: ID!
  lastName: String!
  name: String!
  password: String!
  phone: Float!
  profilePicture: String
}

type Info {
  count: Int!
  next: Int
  pages: Int!
  prev: Int
}

type Level {
  _id: ID!
  nameLevel: String!
}

type LevelResponse {
  code: String!
  info: Level!
  message: String!
  value: String!
}

type Mutation {
  changePassword(dataPassword: ChangePasswordDto!): ResponseInfo!
  createCategory(infoCategory: CreateCategoryDto!): CategoryResponse!
  createFavorite(dataFavorite: CreateFavoriteDto!): ResponseInfo!
  createLevel(dataLevel: CreateLevelDto!): LevelResponse!
  createProduct(dataProduct: CreateProductDto!): ProductResponse!
  createSubscribe(dataInput: CreateSubscriptionDto!): SubscribeResponse!
  createUser(dataUser: CreateUserDto!): UserResponse!
  deleteProduct(idProduct: String!): ProductResponse!
  deleteSubscribe(email: String!): SubscribeResponse!
  deleteUser(idUser: String!): UserResponse!
  removeCategory(idCategory: String!): CategoryResponse!
  removeFavorite(idFavorite: String!, idProduct: String!): ResponseInfo!
  updateCategory(infoCategory: UpdateCategoryDto!): CategoryResponse!
  updateProduct(dataPruduct: UpdateProductDto!): ProductResponse!
  updateUser(dataUser: UpdateUserDto!): UserResponse!
}

type PagCategoryResponse {
  info: Info!
  results: [Category!]!
}

type PagLevelResponse {
  info: Info!
  results: [Level!]!
}

type PagProductResponse {
  info: Info!
  results: [ProductModel!]!
}

type PagSubsResponse {
  info: Info!
  results: [Subscribe!]!
}

type PagUserResponse {
  info: Info!
  results: [UserModelGQL!]!
}

type ProductModel {
  _id: ID!
  idCategory: ID!
  nameCategory: String!
  nameProduct: String!
  price: Float!
  state: Boolean
  stock: Float!
}

type ProductResponse {
  code: String!
  info: ProductModel!
  message: String!
  value: String!
}

type Query {
  getAllLevel(page: Int): PagLevelResponse!
  getCategory(page: Int): PagCategoryResponse!
  getIdCategory(idCategory: String!): Category!
  getIdProduct(idProduct: String!): ProductModel!
  getIdUser(idUser: String!): UserModelGQL!
  getProduct(page: Int): PagProductResponse!
  getSubscribe(page: Int): PagSubsResponse!
  getUsers(page: Int): PagUserResponse!
}

type ResponseInfo {
  code: String!
  message: String!
  value: String!
}

type Subscribe {
  _id: ID!
  email: String!
}

type SubscribeResponse {
  code: String!
  info: Subscribe!
  message: String!
  value: String!
}

input UpdateCategoryDto {
  idCategory: ID!
  nameCategory: String
}

input UpdateProductDto {
  idCategory: ID!
  idProduct: ID!
  nameProduct: String
  price: Float
  state: Boolean
  stock: Float
}

input UpdateUserDto {
  carnet: String!
  email: String!
  idLevel: ID!
  idUser: ID!
  lastName: String!
  name: String!
  phone: Float!
  profilePicture: String
}

type UserModelGQL {
  _id: ID!
  carnet: String!
  email: String!
  idLevel: ID!
  lastName: String!
  name: String!
  nameLevel: String!
  phone: Float!
  profilePicture: String!
}

type UserResponse {
  code: String!
  info: UserModelGQL!
  message: String!
  value: String!
}